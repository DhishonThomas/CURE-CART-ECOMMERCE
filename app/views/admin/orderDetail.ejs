  <%- include('../partials/header'); -%>

  <style>
    button {
  /* padding: 0px 10px; */
  width: 130px;
  height: 30px  ;
  border-radius: 5%;
  background-color: #007bff;
  color: #fff;
  border: none;
  cursor: pointer;
}

button:disabled {
  background-color: #e26c0b;
  cursor: not-allowed;
}
  </style>
  <section class="content-main">
                <div class="content-header">
                    <div>
                        <h2 class="content-title card-title">Order detail</h2>
                        <p>Details for Order ID: 3453012</p>
                    </div>
                </div>
                <div class="card">
                    <header class="card-header">
                        <div class="row align-items-center">
                            <div class="col-lg-6 col-md-6 mb-lg-0 mb-15">
                                <span> <i class="material-icons md-calendar_today"></i> <b>Wed, Aug 13, 2020, 4:34PM</b> </span> <br />
                                <small class="text-muted">Order ID: 3453012</small>
                            </div>
                            <div class="col-lg-6 col-md-6 ms-auto text-md-end">
                                <select class="form-select d-inline-block mb-lg-0 mr-5 mw-200">
                                    <option>Change status</option>
                                    <option>Awaiting payment</option>
                                    <option>Confirmed</option>
                                    <option>Shipped</option>
                                    <option>Delivered</option>
                                </select>
                                <a class="btn btn-primary" href="#">Save</a>
                                <a class="btn btn-secondary print ms-2" href="#"><i class="icon material-icons md-print"></i></a>
                            </div>
                        </div>
                    </header>
                    <!-- card-header end// -->
                    <div class="card-body">
                        <div class="row mb-50 mt-20 order-info-wrap">
                            <div class="col-md-4">
                                <article class="icontext align-items-start">
                                    <span class="icon icon-sm rounded-circle bg-primary-light">
                                        <i class="text-primary material-icons md-person"></i>
                                    </span>
                                    <div class="text">
                                        <h6 class="mb-1">Customer</h6>
                                        <p class="mb-1">
                                            <%= orders.user.username %><br />
                                            <%= orders.user.email %> <br />
                                            <%= orders.user.phonenumber%>
                                        </p>
                                        <!-- <a href="#">View profile</a> -->
                                    </div>
                                </article>
                            </div>
                            <!-- col// -->
                            
                            <!-- col// -->
                            <div class="col-md-4">
                                <article class="icontext align-items-start">
                                    <span class="icon icon-sm rounded-circle bg-primary-light">
                                        <i class="text-primary material-icons md-place"></i>
                                    </span>
                                    <div class="text">
                                        <h6 class="mb-1">Deliver to</h6>
                                        <p class="mb-1">
                                            Name: <%= orders.shippingAddress.name %> <br />
                                            Mobile: <%=orders.shippingAddress.mobile%><br/>
                                            Address: <%= orders.shippingAddress.address%><br/>
                                            PinCode:<%= orders.shippingAddress.pinCode %><br/>
                                            Street: <%= orders.shippingAddress.street %><br/>
                                            City: <%= orders.shippingAddress.city %><br/>
                                            State: <%= orders.shippingAddress.state %>
                                        <!-- <a href="#">View profile</a> -->
                                    </div>
                                </article>
                            </div>
                            <!-- col// -->
                        </div>
                        <!-- row // -->
                        <div class="row">
                            <div class="col-lg-15">
                                <div class="table-responsive">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th width="40%">Product</th>
                                                <th width="20%">Unit Price</th>
                                                <th width="20%">Quantity</th>
                                                <th width="20%">Current Status</th>
                                                 <th width="20%">Order Status</th>
                                                <th width="20%" class="text-end">Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                      
                                            <% orders.items.forEach(item => { %>
                                             
                                              <tr>
                                                <td>
                                                    <a class="itemside" href="#">
                                                        <div class="left">
                                                            <img src="<%=item.product.images[0]%>" width="40" height="40" class="img-xs" alt="Item" />
                                                        </div>
                                                        <div class="info"><%= item.product.productName %></div>
                                                    </a>
                                                </td>
                                                <td>&#8377; <%= item.product.price %></td>

                                                <td><%= item.quantity %></td>
                                                <% if (item.orderStatus==="Pending") { %>
       <td> <button id="cancelButton" data-product-id="<%= item.product._id %>"  data-order-id="<%= orders._id %>">Cancel Order</button></td>   
<% } else if (item.orderStatus==="OrderCanceled") { %>
               <td> <button  disabled >Order Canceled</button></td>
<% } else if (item.orderStatus==="Delivered") { %>
                <td> <button  disabled >Delivered</button></td>
<% } else if (item.orderStatus==="Return") { %>
                 <td> <button  disabled >Return Requested</button></td>
 <% } else if (item.orderStatus==="ReturnOk") { %>
      <td> <button  disabled >Return Accepted</button></td>

               <% } %>

                                                <% if (item.orderStatus==="Pending") { %>
                                                                  <td> <button id="placedButton"  data-product-id="<%= item.product._id %>"  data-order-id="<%= orders._id %>" >Place order</button></td>
<% } else if (item.orderStatus==="OrderCanceled") { %>
                                                                   <td> <button  disabled >Canceled</button></td>

<% } else if (item.orderStatus==="Delivered") { %>
                                                     <td> <button  disabled >Delivered</button></td>                               
<% } else if (item.orderStatus==="Return") { %>
                                        <td> <button id="acceptReturn" data-product-id="<%= item.product._id %>"  data-order-id="<%= orders._id %>"   >Accept Return</button></td>
<% } else if (item.orderStatus==="ReturnOk") { %>
                                         <td> <button  disabled >Return Accepted</button></td>

                                                <% } %>



                                                <td class="text-end">&#8377; <%= (item.product.price*item.quantity) %></td>
                                            </tr>
                                             <% }) %>
                                           
                                            
                                            <tr>
                                                <td colspan="4">
                                                    <article class="float-end">
                                                        <dl class="dlist">
                                                            <dt>Subtotal:</dt>
                                                            <dd>&#8377; <%= orders.totalAmount %></dd>
                                                        </dl>
                                                        <dl class="dlist">
                                                            <dt>Shipping cost:</dt>
                                                            <dd>0</dd>
                                                        </dl>
                                                        <dl class="dlist">
                                                            <dt>Grand total:</dt>
                                                            <dd><b class="h5">&#8377; <%= orders.totalAmount %></b></dd>
                                                        </dl>
                                                        <dl class="dlist">
                                                            <dt class="text-muted">Status:</dt>
                                                            <dd>
 
                                                                <% if (orders.paymentStatus==="Pending") { %>
                                                                    <span class="badge rounded-pill alert-success text-success">Not Paid</span>
                                                                    <% } else if (orders.paymentStatus==="Completed") { %>
                                                                    <span class="badge rounded-pill alert-success text-success">Paid</span>

                                                                <% } %>
                                                            </dd>
                                                        </dl>
                                                    </article>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <!-- table-responsive// -->
                            </div>
                            <!-- col// -->
                            <!-- <div class="col-lg-1"></div>
                            <div class="col-lg-4"> -->
                                <!-- <div class="box shadow-sm bg-light">
                                    <h6 class="mb-15">Payment info</h6>
                                    <p>
                                        <img src="/adminCss/imgs/card-brands/2.png" class="border" height="20" /> Master Card **** **** 4768 <br />
                                        Business name: Grand Market LLC <br />
                                        Phone: +1 (800) 555-154-52
                                    </p>
                                </div> -->
                                <!-- <div class="h-25 pt-4">
                                    <div class="mb-3">
                                        <label>Notes</label>
                                        <textarea class="form-control" name="notes" id="notes" placeholder="Type some note"></textarea>
                                    </div>
                                    <button class="btn btn-primary">Save note</button>
                                </div> -->
                            </div>
                            <!-- col// -->
                        </div>
                    </div>
                    <!-- card-body end// -->
                </div>
                <!-- card end// -->
            </section>

            <%- include('../partials/footer'); -%>

            <script>


document.addEventListener('DOMContentLoaded', async () => {

   
    const handleCancelOrder = async (orderId,productId) => {
      
      try {
            const response = await fetch('/admin/cancel-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId,productId })
            });

            if (response.ok) {
                const data = await response.json();
                if (data.success) {
                    placedButton.textContent = 'Canceled'
                    placedButton.disabled = true
                    cancelButton.textContent = 'Order Canceled';
                    cancelButton.disabled = true;
                    Swal.fire({
                        title: 'Order Canceled',
                        text: 'Your order has been successfully canceled.',
                        icon: 'success',
                    });
                } else {
                    throw new Error(data.message);
                }
            } else {
                throw new Error('Failed to cancel order');
            }
        } catch (error) {
            console.error('Error canceling order:', error);
            swal({
                title: 'Error',
                text: 'Failed to cancel order. Please try again later.',
                icon: 'error',
            })
        }
    };


        const handlePlaceOrder = async (orderId,productId) => {
      
      try {
            const response = await fetch('/admin/place-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId,productId })
            });

            if (response.ok) {
                const data = await response.json();
                if (data.success) {
                    placedButton.textContent = 'Delivered'
                    placedButton.disabled = true
                    cancelButton.textContent = 'Delivered';
                    cancelButton.disabled = true;
                    Swal.fire({
                        title: '<span style="color: red;">Order Delivered</span>',
                              background: 'RGB(46, 46, 46)',
                        text: 'Order has been successfully Delivered.',
                        icon: 'success',
                    });
                } else {
                    throw new Error(data.message);
                }
            } else {
                throw new Error('Failed to cancel order');
            }
        } catch (error) {
            console.error('Error canceling order:', error);
            swal({
                title: 'Error',
                text: 'Failed to cancel order. Please try again later.',
                icon: 'error',
            })
        }
    };

    const handleAccpetReturn = async (orderId,productId) => {
      
      try {
            const response = await fetch('/admin/accpetReturn-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId,productId })
            });

            if (response.ok) {
                const data = await response.json();
                if (data.success) {
                    acceptReturn.textContent = 'Return Accepted'
                    acceptReturn.disabled = true
                    cancelButton.textContent = 'Return Accepted';
                    cancelButton.disabled = true;
                    Swal.fire({
                        title: 'Return Accepted',
                        text: 'Return Accepted successfully .',
                        icon: 'success',
                    });
                } else {
                    throw new Error(data.message);
                }
            } else {
                throw new Error('Failed to cancel order');
            }
        } catch (error) {
            console.error('Error canceling order:', error);
            swal({
                title: 'Error',
                text: 'Failed to cancel order. Please try again later.',
                icon: 'error',
            })
        }
    };



    const handleReturnOrder = async (orderId) => {
        try {
            const reason = await swal({
                title: 'Return Order',
                text: 'Please provide a reason for return:',
                content: {
                    element: 'input',
                    attributes: {
                        placeholder: 'Enter reason',
                        type: 'text',
                    },
                },
                buttons: {
                    cancel: 'Cancel',
                    confirm: 'Return',
                },
            });

            if (reason) {
                const response = await fetch('/return-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ orderId, reason })
                });

                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        returnButton.textContent = 'Return Accepted';
                        returnButton.disabled = true;
                        swal({
                            title: 'Return Accepted',
                            text: 'Your return request has been accepted.',
                            icon: 'success',
                        });
                    } else {
                        throw new Error(data.message);
                    }
                } else {
                    throw new Error('Failed to process return request');
                }
            }
        } catch (error) {
            console.error('Error processing return request:', error);
            swal({
                title: 'Error',
                text: 'Failed to process return request. Please try again later.',
                icon: 'error',
            });
        }
    }; 

    const cancelButton = document.getElementById('cancelButton');
    const returnButton = document.getElementById('returnButton');
    const acceptReturn = document.getElementById('acceptReturn');
       const placedButton = document.getElementById('placedButton');
if (acceptReturn) {
    

acceptReturn.addEventListener('click',async ()=>{
      const orderId = acceptReturn.dataset.orderId;
        const productId =  acceptReturn.dataset.productId;
       console.log("Order Id",productId);
  if (orderId && productId) {
            const confirmPlaced = await Swal.fire({
                 title: 'Accept Return',
    text: 'Are you sure you want Accept Return?',
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#d33',
    cancelButtonColor: '#3085d6',
    confirmButtonText: 'Yes',
    cancelButtonText: 'No'
            });

            if (confirmPlaced.isConfirmed) {
                handleAccpetReturn(orderId,productId);

            }
        } else {
            console.error('Order ID not found');
        }

})
}

if (placedButton) {
placedButton.addEventListener('click',async ()=>{
        const orderId = placedButton.dataset.orderId;
        const productId =  placedButton.dataset.productId;

        console.log("Order Id",productId);
  if (orderId && productId) {
            const confirmPlaced = await Swal.fire({
                 title: '<span style="color: red;">Order Place</span>',
    text: 'Are you sure you want to Place this order?',
         html: '<span style="color: white;">You won\'t be able to revert this!</span>',

    icon: 'warning',
    showCancelButton: true,
     background: 'RGB(46, 46, 46)',
    confirmButtonColor: '#d33',
    cancelButtonColor: '#3085d6',
    confirmButtonText: 'Yes',
    cancelButtonText: 'No'
            });

            if (confirmPlaced.isConfirmed) {
                handlePlaceOrder(orderId,productId);

            }
        } else {
            console.error('Order ID not found');
        } 
})

}

if (cancelButton) {
    

    cancelButton.addEventListener('click', async () => {
        const orderId = cancelButton.dataset.orderId;
        const productId =  cancelButton.dataset.productId;

        console.log("OrderId", productId);
        if (orderId && productId) {
            const confirmCancel = await Swal.fire({
                 title: 'Cancel Order',
    text: 'Are you sure you want to cancel this order?',
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#d33',
    cancelButtonColor: '#3085d6',
    confirmButtonText: 'Yes',
    cancelButtonText: 'No'
            });

            if (confirmCancel.isConfirmed) {
                handleCancelOrder(orderId,productId);

            }
        } else {
            console.error('Order ID not found');
        }
    });
}
if (returnButton) {
    returnButton.addEventListener('click', async () => {
        const orderId = returnButton.dataset.orderId;
        if (orderId) {
            handleReturnOrder(orderId);
        } else {
            console.error('Order ID not found');
        }
    });
    }
});
  
</script>
