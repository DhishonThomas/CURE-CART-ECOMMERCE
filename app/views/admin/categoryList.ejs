<%- include('../partials/header'); -%>

<style>

/* Dark mode styles */
.dark-mode {
    background-color: #333; /* Dark background color */
    color: #fff; /* Light text color */
}

.dark-mode .modal-content {
    background-color: #444; /* Darker background for modal content */
    border: 1px solid #666; /* Dark border */
}

.dark-mode .modal-content h2 {
    color: #fff; /* Light text color for headings */
}

.dark-mode .offer-card {
    background-color: #555; /* Dark background for offer cards */
    border: 1px solid #777; /* Dark border for offer cards */
    color: #fff; /* Light text color for offer card content */
}

</style>
<style>
    .offer-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px; /* Adjust the gap between offer cards */
    }

    .offer-card {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        width: calc(50% - 10px); /* Adjust the width of each card */
        /* You can adjust the width percentage to fit more or fewer cards per row */
    }

    .modal{
        height: 50%;
    }
</style>

<style>
    @media (max-width: 991px) {
        .order-lg-first {
            order: -1;
        }
    }
    .offer-card {
        border: 1px solid #ccc;
        padding: 10px;
        margin-bottom: 10px;
        cursor: pointer;
    }
    .offer-card:hover {
        background-color: #0d7409;
    }
  .tick-mark {
    margin-right: 5px; /* Adjust margin to create space between tick mark and address details */
    margin-top: -10px; /* Move tick mark above the address box */
    color: yellow;
    float: right; /* Align tick mark to the right */
}


      .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0; /* Set top to 0 to align with the top of the page */
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
    overflow: auto;
}

.modal-content {
    background-color: #fff;
    margin: 0 auto; /* Center horizontally */
    margin-top: 50px; /* Adjust this value to create space from the top */
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    max-width: 600px;
    width: 80%;
}


        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }

        /* Form styles */
        .form-group {
            margin-bottom: 15px;
        }

        .form-row {
            margin-top: 15px;
        }

        .form-group label {
            font-weight: bold;
        }

        .form-control {
            width: 100%;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        .btn-primary {
            background-color: #007bff;
            color: #fff;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            cursor: pointer;
        }

        .btn-primary:hover {
            background-color: #0056b3;
        }
        
    
</style>
<style>
    .message-container{
    color: crimson;
    
    }
    .offer-box {
    border: 1px solid #ccc;
    padding: 10px;
    margin-bottom: 10px;
    cursor: pointer;
}

.offer-box.selected {
    border-color: #007bff;
}

</style>
 <section class="content-main">
                <div class="content-header">
                    <div>
                        <% let offersAll = offers %>
                        <h2 class="content-title card-title">Categories</h2>
                        <p>Add, edit or delete a category</p>
                    </div>
                    <div>
                        <input type="text" placeholder="Search Categories" class="form-control bg-white" />
                    </div>
                </div>
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3">
                                <form action="/admin/newCategory" method="post" id="formblock">
                                    <div class="mb-4">
                                         <div class="message-container">
                                             <p><%= message %></p>
                                                </div>
                                        <label for="product_name" class="form-label">Name</label>
                                        <input type="text" placeholder="Enter category name" class="form-control" id="categoryname" name="category_name" />
                                   
                                         <label for="product_name" class="form-label">About</label>
                                        <input type="text" placeholder="Enter About category" class="form-control" id="about" name="about" />
                                   

                                        <label class="form-label">Description</label>
                                        <textarea placeholder="Enter description" class="form-control" id="description" name="description"></textarea>
                                    </div>
                                    <div class="d-grid">
                                        <button class="btn btn-primary" onclick="return validateForm()">Create category</button>
                                    </div>
                                </form>
                            </div>
                            <div class="col-md-9">
              <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <!-- <th class="text-center">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="" />
                                </div>
                            </th> -->
                            <!-- <th>ID</th> -->
                            <th>Category Name</th>
                            <th>About</th>
                            <th>Offer</th>
                            <th>Action</th>
                            <th>Edit</th>
                            
                            <th >Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% categories.forEach(category => { %>
                            <tr>
                                <!-- <td class="text-center">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value="" />
                                    </div>
                                </td> -->
                                <!-- <td><%= category.id %></td> -->
                                <td><%= category.category_name %></td>
                                <td><%= category.about %></td>
                                <% console.log(category.offer); %>
                                <% if (category.offer) { %>
                                 
                                <td>
                                    <button class="removeOffer" style="background-color: red;border-radius: 8px;" data-category-id="<%= category._id %>">Remove Offer</button>
                                </td>
                                <% } else { %>
                                    <td>
                                    <button class="openModalBtn3"  style="color: green;border-radius: 8px;" data-category-id="<%= category._id %>">Add Offer</button>
                                </td>
                                <% } %>

                             <td>
                <a href="#"  onclick="isListed('<%=category._id %>')" class="list-toggle-button btn btn-sm font-sm <%= category.isListed ? 'unlist-red' : 'list-green' %>"
                    data-listed="<%= category.isListed %>">
                    <%= category.isListed ? 'Unlist' : 'List' %>
                </a>
            </td>
            <td><a href="/admin/categoryEdit/<%=category._id %>">Edit</a></td>
            <td>
                <a href="#" class="text-danger" onclick="confirmDelete('<%=category._id %>')">Delete</a>
            </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>

            
                
                            </div>
                            <!-- .col// -->
                        </div>
                        <!-- .row // -->
                    </div>
                    <!-- card body .// -->
                    
                </div>
                <!-- card .// -->
                
            </section>
                <div id="addressModal2" class="modal dark-mode">
                    <div class="modal-content ">
                        <span class="close">&times;</span>
                        <h2>Add Offer</h2>
                        <form id="addAddress">
                            <div class="offer-container">
                                <% offersAll.forEach(offer => { %>
                                <div class="offer-card" data-offer-id="<%= offer.id %>">
                                    <p><strong><%= offer.offerName %></strong></p>
                                    <p>Discount: <%= offer.discountPercentage %></p>
                                    <p>Valid From: <%= offer.validFrom.toString().split('G')[0].trim() %></p>
                                    <p>Valid Until: <%= offer.validUntil.toString().split('G')[0].trim() %></p>
                            
                                </div>
                                
                                <% }) %>
                            </div>
                            <br>
                            <button type="submit" class="btn btn-primary">Add Offer</button>
                        </form>
                    </div>
                </div>
            
            
<style>
    .list-green {
        color: white;
        background-color: green;
        padding: 5px;
        border-radius: 5px;
        text-decoration: none;
        margin-left: 5px;
    }

    .unlist-red {
        color: white;
        background-color: red;
        padding: 5px;
        border-radius: 5px;
        text-decoration: none;
        margin-left: 5px;
    }


</style>

<%- include('../partials/footer'); -%>

<script>
function isListed(isListedId) {

    console.log(isListedId);
    fetch(`/admin/categoryUlist/${isListedId}`, {
    method: "GET"
})
.then(response => response.json())
.then(data => {
    if (data.success) {
        console.log(data.message);
        window.location.reload();         
    }else{
        window.location.reload();         

    }
})
.catch(error => {
    console.error('Error:', error);
});

}

</script>
<script>
    let categoryId 

document.addEventListener("DOMContentLoaded", function () {

    const offerBoxes = document.querySelectorAll('.removeOffer');

    offerBoxes.forEach(offerBox => {
        offerBox.addEventListener('click', function () {
            categoryId = this.getAttribute('data-category-id');
            console.log('categoryId:', categoryId); 
            fetch(`/admin/categoryOfferRmove/${categoryId}`)
    .then(responce=>responce.json())
    .then(data=>{
        if(data.success){
            Swal.fire({
                                title: '<span style="color: green;">Offer Removed Successfully</span>',
                                icon: 'success',
                                background: 'RGB(46, 46, 46)',
                                timer: 3000,
                                showConfirmButton: false,
                                html: '<span style="color: white;">Your offer has been Removed.</span>'
                            })
                            .then(data=>{
                                window.location.reload()

                            })
        }else{
            window.location.reload()
        }
    })
        });
    });

  
});

</script>

<script>
    

    document.addEventListener("DOMContentLoaded", function () {
        const offerBoxes = document.querySelectorAll('.openModalBtn3');

        offerBoxes.forEach(offerBox => {
            offerBox.addEventListener('click', function () {
                categoryId = this.getAttribute('data-category-id');
                console.log('categoryId:', categoryId); 
            });
        });
    });

    document.addEventListener("DOMContentLoaded", function () {

        const offerBoxes = document.querySelectorAll('.offer-card');

        offerBoxes.forEach(offerBox => {
            offerBox.addEventListener('click', function () {
                offerBoxes.forEach(box => box.classList.remove('active'));
                offerBox.classList.add('active');

                document.querySelectorAll('.tick-mark').forEach(tickMark => tickMark.remove());

                const tickMark = document.createElement('span');
                tickMark.className = 'tick-mark';
                tickMark.innerHTML = '<span style="color: yellow; font-weight: bold;">&#10004;</span> Selected';
                offerBox.insertBefore(tickMark, offerBox.firstChild);
            });
        });

        document.getElementById('addAddress').addEventListener('submit', function (event) {
            event.preventDefault();

            const selectedOfferBox = document.querySelector('.offer-card.active');

            if (selectedOfferBox) {
                const selectedOfferId = selectedOfferBox.getAttribute('data-offer-id');
                fetch(`/admin/categoryOffer/?selectedOfferId=${selectedOfferId}&categoryId=${categoryId}`)
                    .then(responce => responce.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: '<span style="color: green;">Offer Added Successfully</span>',
                                icon: 'success',
                                background: 'RGB(46, 46, 46)',
                                timer: 3000,
                                showConfirmButton: false,
                                html: '<span style="color: white;">Your offer has been added.</span>'
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            } else {
                console.log('No offer selected');
            }
        });
    });
</script>




<script>

const modal = document.getElementById('addressModal2');

const btns = document.getElementsByClassName("openModalBtn3");

const span = document.getElementsByClassName('close')[0];

function openModal() {
    modal.style.display = 'block';
}

function closeModal() {
    modal.style.display = 'none';
}

for (let i = 0; i < btns.length; i++) {
    btns[i].addEventListener('click', openModal);
}

span.addEventListener('click', closeModal);

window.addEventListener('click', function(event) {
    if (event.target == modal) {
        closeModal();
    }
});

</script>

 <script>
  function confirmDelete(categoryId) {
    Swal.fire({
      title: '<span style="color: red;">Are you sure?</span>',
      html: '<span style="color: white;">You won\'t be able to revert this!</span>',
      icon: 'warning',
      background: 'RGB(46, 46, 46)',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
      if (result.isConfirmed) {
fetch(`/admin/categoryDelete/${categoryId}`,{
    method:"GET"
}).then(responce=>responce.json())
.then(data=>{
    if(data.success){
        window.location.reload();         

    }else{
        window.location.reload();         

    }
})
    }
    });
  }
</script>


<script>
    const listToggleButtons = document.querySelectorAll('.list-toggle-button');

    listToggleButtons.forEach(button => {
        button.addEventListener('click', function () {
            const isListed = JSON.parse(this.getAttribute('data-listed'));
            this.setAttribute('data-listed', !isListed);
            this.innerText = isListed ? 'List' : 'Unlist';
            this.classList.toggle('list-green', !isListed);
            this.classList.toggle('unlist-red', isListed);
        });
    });
</script>
<script>
  function validateForm(){
  const categoryName = document.getElementById("categoryname").value
  const description  = document.getElementById("description").value
  const aboutCategory = document.getElementById("about").value

  if(!categoryName || !description ||!aboutCategory){
    alert("Please fill all the required fields")
    return false
  }
  if(/\s/.test(categoryName)){
    alert("Category name cannot contain spaces")
    return false
  }

  if (/^\s*$/.test(description) || description.trim().split(/\s+/).length < 3) {
        alert("Description must contain at least three words and cannot be only spaces.");
        return false;
    }

    // Check if the aboutCategory contains only spaces or has less than three words
    if (/^\s*$/.test(aboutCategory) || aboutCategory.trim().split(/\s+/).length < 3) {
        alert("About category must contain at least three words and cannot be only spaces.");
        return false;
    }
      document.getElementById("formblock").submit();

  }
  </script>
