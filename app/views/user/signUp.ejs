  <%- include('../partialsUser/header') -%>
      

 		   <main class="main">
            <nav aria-label="breadcrumb" class="breadcrumb-nav border-0 mb-0">
                <div class="container">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="index.html">Home</a></li>
                        <li class="breadcrumb-item"><a href="#">Pages</a></li>
                        <li class="breadcrumb-item active" aria-current="page">Login</li>
                    </ol>
                </div><!-- End .container -->
            </nav><!-- End .breadcrumb-nav -->

            <div class="login-page bg-image pt-8 pb-8 pt-md-12 pb-md-12 pt-lg-17 pb-lg-17" style="background-image: url('assets/images/backgrounds/login-bg.jpg')">
            	<div class="container">
            		<div class="form-box">
            			<div class="form-tab">
	            			<ul class="nav nav-pills nav-fill" role="tablist">
							    <!-- <li class="nav-item">
							        <a class="nav-link" id="signin-tab-2" data-toggle="tab" href="#signin-2" role="tab" aria-controls="signin-2" aria-selected="false">Sign In</a>
							    </li> -->
							    <li class="nav-item">
							        <a class="nav-link active" id="register-tab-2" data-toggle="tab" href="#register-2" role="tab" aria-controls="register-2" aria-selected="true">Register</a>
							    </li>
							</ul>
					<span style="color: red;"> <%= message %> </span>
							    <div class="tab-pane fade show active" id="register-2" role="tabpanel" aria-labelledby="register-tab-2">
						<form action="/signUp" method="post"  id="formblock">

              <div class="form-group">
							    			<label for="register-email-2">Username*</label>
							    			<input type="text" class="form-control" id="username" name="username" required>
							    		</div><!-- End .form-group -->



							    		<div class="form-group">
							    			<label for="register-email-2">Your email address *</label>
							    			<input type="email" class="form-control" id="email" name="email" required>
                                         <span id="usernameError" style="color: red;"></span>

							    		</div><!-- End .form-group -->


 <div class="form-group">
							    			<label for="register-password-2">Phonenumber *</label>
                        <input type="tel" class="form-control" id="phonenumber" name="phonenumber"  placeholder="Format: 123-456-7890" required>
							    		</div><!-- End .form-group -->

							    	<div class="form-group">
    <label for="register-password-2">Password *</label>
    <input type="password" class="form-control" id="password" name="password" oninput="checkPasswordStrength()" required>
    <div id="password-strength"></div>
</div><!-- End .form-group -->
<span id="current-time"></span>


  <div class="form-group">
  <button type="button" class="btn btn-outline-primary-2" id="sendOtpButton" disabled>
    <span>Send OTP</span>
    <i class="icon-long-arrow-right"></i>
  </button>
</div>
 <span id="otpSended" style="color: rgb(3, 225, 85);"></span><br>

					<div class="form-group" style="display: none;"  id="resendDispaly">
  <button type="button" class="btn btn-outline-primary-2" id="resendOtpButton"  disabled>
    <span id="timer">Resend OTP</span>
  </button>
</div>
		    		 <span id="otpInvalid" style="color: rgb(129, 5, 5);"></span><br>


                   <div class="form-group hide" style="display: none;" id="otpDisplay">
  <label for="otp">OTP *</label>
  <input type="text" class="form-control" id="otp" name="otp" disabled required>
</div><!-- End .form-group -->


<div class="form-group hide" style="display: none;" id="verifyDisplay">
  <button type="button" class="btn btn-outline-primary-2"  id="verifyOtpButton" disabled>
    <span>Verify OTP</span>
    <i class="icon-long-arrow-right"></i>
  </button>
</div>



                                          <div class="form-footer hide" style="display: none;" id="signupDispaly"> 
							    			<button type="submit" class="btn btn-outline-primary-2" onclick="return validateForm()" id="signUpButton" disabled>
			                					<span>SIGN UP</span>
			            						<i class="icon-long-arrow-right"></i>
			                				</button>
                                            </div>
                                            </div>
                                            </form>
                                            </div>

							    	</div><!-- End .form-choice -->
							    </div><!-- .End .tab-pane -->
							</div><!-- End .tab-content -->
						</div><!-- End .form-tab -->
            		</div><!-- End .form-box -->
            	</div><!-- End .container -->
            </div><!-- End .login-page section-bg -->
        </main><!-- End .main -->








<script>


//   document.getElementById('signUpButton').addEventListener('click', function (event) {
//           event.preventDefault();
  
//           if (validateForm()) {
//               validateOTP();
//           }
//       });
  
//       function validateOTP() {
//           var email = document.getElementById('email').value;
//           var otpInput = document.getElementById('otp').value;
  
//           // Make an HTTP request to the server to validate the OTP
//           fetch('/verify', {
//               method: 'POST',
//               headers: {
//                   'Content-Type': 'application/json',
//               },
//               body: JSON.stringify({ otp: otpInput, email: email }),
//           })
//               .then(response => response.json())
//               .then(data => {
//                   if (!data.success) {
//                      alert('Invalid Email. Please try again.');
                      
//                   } if(!data.otp) {
//                      alert('Invalid OTP. Please try again.');
//                   }else{
//  document.getElementById('formblock').submit();
//                   }
//               })
//               .catch(error => {
//                   console.error('Error validating OTP:', error);
//               });
//       }
   

   


</script>





<script>

function validateForm() {
    var username = document.getElementById("username").value;
    var password = document.getElementById("password").value;
    var email = document.getElementById("email").value;
    var phonenumber = document.getElementById("phonenumber").value;
    var otp         = document.getElementById("otp").value

    if (!username || !password || !email || !phonenumber) {
        alert("Please fill in all required fields.");
        return false;
    }

    if (/\s/.test(username)) {
        alert("Username cannot contain spaces");
        return false;
    }

    // Validate phone number
    if (!isValidPhoneNumber(phonenumber)) {
        alert("Please enter a valid phone number.");
        return false;
    }


      const isPasswordStrong = checkPasswordStrength();
        if (!isPasswordStrong) {
            alert('Please choose a strong password.');
            return false;
        }


   return true

function isValidPhoneNumber(phonenumber) {
    
    var phoneNumberRegex = /^\d{10}$/;
    return phoneNumberRegex.test(phonenumber);
}





    // function updateTime() {
    //     const currentTimeElement = document.getElementById('current-time');
    //     const currentTime = new Date().toLocaleTimeString();
    //     // currentTimeElement.textContent = 'Current Time: ' + currentTime;
    // }

    function checkPasswordStrength() {
        // updateTime(); // Update the current time

        const password = document.getElementById('password').value;
        const strengthIndicator = document.getElementById('password-strength');

        // Check password strength
        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
        const isStrong = regex.test(password);

        // Display password strength feedback
        if (isStrong) {

            strengthIndicator.style.color = 'green';
            strengthIndicator.innerHTML = 'Strong password';
            return isStrong
        } else {
            strengthIndicator.style.color = 'red';
            strengthIndicator.innerHTML = 'Password should be at least 8 characters long and include at least one lowercase letter, one uppercase letter, one digit, and one special character.';
            return  !isStrong
        }
    }

    // setInterval(updateTime, 1000); // Update the time every second
  }




  document.getElementById('email').addEventListener('input', function () {
    const emailInput = this.value;
    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{3,}$/;
    const sendOtpButton = document.getElementById("sendOtpButton");

    if (emailRegex.test(emailInput)) {
      sendOtpButton.removeAttribute("disabled");
    } else {
      sendOtpButton.setAttribute("disabled", true);
    }
  });

  document.addEventListener("DOMContentLoaded", function () {
    const emailInput = document.getElementById("email");
    const sendOtpButton = document.getElementById("sendOtpButton");
    const otpInput = document.getElementById("otp");
    const verifyOtpButton = document.getElementById("verifyOtpButton");
    const resendOtpButton = document.getElementById("resendOtpButton");
    const timerDisplay = document.getElementById("timer");
    const signUpButton = document.getElementById("signUpButton")
    const resendDispaly = document.getElementById("resendDispaly")
    const verifyDisplay = document.getElementById("verifyDisplay")
    const otpDisplay = document.getElementById("otpDisplay")
    const signupDispaly = document.getElementById("signupDispaly")


    let timer;
    let timeLeft = 60; // Set the initial timer value in seconds

    sendOtpButton.addEventListener("click", function () {
      const email = emailInput.value;
       sendOtpButton.setAttribute("disabled", true);

      // Make an API request to your server to check if the email exists
      // You need to replace the URL with your actual server endpoint
      fetch('/sendOtp', {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json' // Specify that the content type is JSON
  },
  body: JSON.stringify({email:email}) // Convert the data object to a JSON string
})
  .then(response => response.json())
  .then(data => {
    if (data.exists) {
      usernameError.innerText = 'Email already exsist';
      sendOtpButton.removeAttribute("disabled");
        
    } else {
      otpSended.innerText = `OTP sent to ${email}`;
      
      otpDisplay.style.display="block"
       sendOtpButton.setAttribute("disabled", true);
      enableOtpSection();
      startTimer();
    }
  })
  .catch(error => {
    console.error("Error checking email:", error);
  });
    });

    verifyOtpButton.addEventListener("click", function () {
      const otp = otpInput.value;
      const email = emailInput.value;
     


      fetch(`/verifyOtp`,{
        method:"POST",
        headers:{
          'Content-Type':'application/json'
        },
        body:JSON.stringify({email:email,otp:otp})
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
             verifyOtpButton.setAttribute("disabled", true);
         signUpButton.removeAttribute("disabled");
        otpSended.innerText ="";
        otpInvalid.innerText = ""
        resendOtpButton.textContent = "Verified Successfully";
        signupDispaly.style.display="block"
        resendOtpButton.setAttribute=("disabled",true)
      
       
       
        
          
          } else {
           otpInvalid.innerText = "Invalid OTP. Please try again."
          }
        })
        .catch((error) => {
          console.error("Error verifying OTP:", error);
        });
    });

    resendOtpButton.addEventListener("click", function () {

     resendOtpButton.setAttribute("disabled", true);
      const email = emailInput.value;
      fetch(`/resendOtp`, {
  method: 'POST',
  headers: {
    'Content-Type': 'application/json' // Specify that the content type is JSON
  },
  body: JSON.stringify({email:email}) // Convert the data object to a JSON string
})
        .then((response) => response.json())
        .then((data) => {
          if (data.exists) {
            usernameError.innerText = 'Email already exsist';
          } else {

            otpSended.innerText = `otp send to ${email}`;
            startTimer();
            alert("OTP Resent Successfully");
            verifyOtpButton.removeAttribute("disabled");
            
          }
        })
        .catch((error) => {
          console.error("Error resending OTP:", error);
        });
    });

    function enableOtpSection() {
      // Enable OTP input, verify button, and disable send button
      otpInput.removeAttribute("disabled");
      verifyOtpButton.removeAttribute("disabled");
      sendOtpButton.setAttribute("disabled", true);

    }

    function startTimer() {
      timer = setInterval(function () {
        timeLeft--;

        if (timeLeft > 0) {
          timerDisplay.textContent = `Time Left: ${timeLeft}s`;
          resendDispaly.style.display="block"
          resendOtpButton.setAttribute("disabled", true);
          verifyDisplay.style.display="block"
        } else {
          clearInterval(timer);
          timerDisplay.textContent = "Resend OTP";
          resendOtpButton.removeAttribute("disabled");
          timeLeft = 60; // Reset the timer to 60 seconds
        }
      }, 1000);
    }
  });
</script>





<%- include('../partialsUser/footer') -%>
